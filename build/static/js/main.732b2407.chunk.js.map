{"version":3,"sources":["components/ProtectedRoute/index.js","App.js","index.js"],"names":["ProtectedRoute","props","undefined","Cookies","get","_jsx","Redirect","to","Route","_objectSpread","LoginForm","lazy","Home","Jobs","JobItemDetails","NotFound","App","_Fragment","children","Suspense","fallback","className","Loader","type","color","height","width","_jsxs","Switch","exact","path","component","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"sPAWeA,EARQ,SAAAC,GAErB,YAAcC,IADAC,IAAQC,IAAI,aAEjBC,cAACC,IAAQ,CAACC,GAAG,WAEfF,cAACG,IAAKC,YAAA,GAAKR,GACpB,ECDMS,EAAYC,gBAAK,kBAAM,4BAAgC,IACvDC,EAAOD,gBAAK,kBAAM,kDAA2B,IAC7CE,EAAOF,gBAAK,kBAAM,yDAA2B,IAC7CG,EAAiBH,gBAAK,kBAAM,iEAAqC,IACjEI,EAAWJ,gBAAK,kBAAM,kDAA+B,IAuB5CK,EArBH,WAAH,OACPX,cAAAY,WAAA,CAAAC,SACEb,cAACc,WAAQ,CACPC,SACEf,cAAA,OAAKgB,UAAU,mBAAmB,cAAY,SAAQH,SACpDb,cAACiB,IAAM,CAACC,KAAK,YAAYC,MAAM,UAAUC,OAAO,KAAKC,MAAM,SAE9DR,SAEDS,eAACC,IAAM,CAAAV,SAAA,CACLb,cAACG,IAAK,CAACqB,OAAK,EAACC,KAAK,SAASC,UAAWrB,IACtCL,cAACL,EAAc,CAAC6B,OAAK,EAACC,KAAK,IAAIC,UAAWnB,IAC1CP,cAACL,EAAc,CAAC6B,OAAK,EAACC,KAAK,QAAQC,UAAWlB,IAC9CR,cAACL,EAAc,CAAC6B,OAAK,EAACC,KAAK,YAAYC,UAAWjB,IAClDT,cAACG,IAAK,CAACsB,KAAK,aAAaC,UAAWhB,IACpCV,cAACC,IAAQ,CAACC,GAAG,qBAGhB,EC1BLyB,IAASC,OACP5B,cAAC6B,IAAMC,WAAU,CAAAjB,SACfb,cAAC+B,IAAa,CAAAlB,SACZb,cAACW,EAAG,QAGRqB,SAASC,eAAe,Q","file":"static/js/main.732b2407.chunk.js","sourcesContent":["import {Redirect, Route} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookies.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  } // if user is not logged in and tries to access home page we have to redirect to /login page again\n  return <Route {...props} />\n} // if token !== undefined, means token is available so we are unpacking props such as exact,path,component\n// and passing to Route component\nexport default ProtectedRoute\n","import {lazy, Suspense} from 'react'\nimport {Route, Switch, Redirect} from 'react-router-dom'\n\nimport './App.css'\n\nimport Loader from 'react-loader-spinner'\nimport ProtectedRoute from './components/ProtectedRoute'\n\nconst LoginForm = lazy(() => import('./components/LoginForm'))\nconst Home = lazy(() => import('./components/Home'))\nconst Jobs = lazy(() => import('./components/Jobs'))\nconst JobItemDetails = lazy(() => import('./components/JobItemDetails'))\nconst NotFound = lazy(() => import('./components/NotFound'))\n\nconst App = () => (\n  <>\n    <Suspense\n      fallback={\n        <div className=\"loader-container\" data-testid=\"loader\">\n          <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n        </div>\n      }\n    >\n      <Switch>\n        <Route exact path=\"/login\" component={LoginForm} />\n        <ProtectedRoute exact path=\"/\" component={Home} />\n        <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n        <ProtectedRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n        <Route path=\"/not-found\" component={NotFound} />\n        <Redirect to=\"/not-found\" />\n      </Switch>\n    </Suspense>\n  </>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}